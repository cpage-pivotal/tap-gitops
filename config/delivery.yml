apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: spring-sensors-unicredit-01-w01-s007
  annotations:
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    ootb.apps.tanzu.vmware.com/apidescriptor-ref: "true"
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: spring-sensors
    apps.tanzu.vmware.com/scanning: "true"
    apps.tanzu.vmware.com/workload-type: web
    kapp.k14s.io/app: "1683383963062903318"
    kapp.k14s.io/association: v1.6987a6df9b5bf1bba7fa894b5fcd95e6
    app.kubernetes.io/component: run
    carto.run/workload-name: spring-sensors-unicredit-01-w01-s007
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "1"
        boot.spring.io/version: 3.0.6
        conventions.carto.run/applied-conventions: |-
          appliveview-sample/app-live-view-appflavour-check
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/spring-boot
          spring-boot-convention/spring-boot-graceful-shutdown
          spring-boot-convention/spring-boot-web
          spring-boot-convention/spring-boot-actuator
          spring-boot-convention/spring-boot-actuator-probes
          spring-boot-convention/app-live-view-appflavour-check
          spring-boot-convention/app-live-view-connector-boot
          spring-boot-convention/app-live-view-appflavours-boot
        developer.conventions/target-containers: workload
        kapp.k14s.io/identity: v1;workloads/carto.run/Workload/spring-sensors-unicredit-01-w01-s007;carto.run/v1alpha1
        kapp.k14s.io/original: '{"apiVersion":"carto.run/v1alpha1","kind":"Workload","metadata":{"labels":{"app.kubernetes.io/part-of":"spring-sensors","apps.tanzu.vmware.com/scanning":"true","apps.tanzu.vmware.com/workload-type":"web","kapp.k14s.io/app":"1683383963062903318","kapp.k14s.io/association":"v1.6987a6df9b5bf1bba7fa894b5fcd95e6"},"name":"spring-sensors-unicredit-01-w01-s007","namespace":"workloads"},"spec":{"build":{"env":[{"name":"BP_JVM_VERSION","value":"17"}]},"params":[{"name":"annotations","value":{"autoscaling.knative.dev/minScale":"1"}},{"name":"gitops_repository","value":"ssh://git@github.com/cpage-pivotal/tap-gitops"},{"name":"gitops_branch","value":"spring-sensors-unicredit-01-w01-s007"}],"resources":{"limits":{"memory":"512Mi"},"requests":{"cpu":"500m","memory":"512Mi"}},"serviceClaims":[{"name":"db","ref":{"apiVersion":"services.apps.tanzu.vmware.com/v1alpha1","kind":"ClassClaim","name":"sensors-mysql"}}],"source":{"git":{"ref":{"branch":"main"},"url":"https://gitea.workshop.amer.end2end.link/gitea_admin/unicredit-01-w01-s007-1686068262.git"}}}}'
        kapp.k14s.io/original-diff-md5: c6e94dc94aed3401b5d0f26ed6c0bff3
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: spring-sensors
        apps.tanzu.vmware.com/auto-configure-actuators: "false"
        apps.tanzu.vmware.com/scanning: "true"
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: spring-sensors-unicredit-01-w01-s007
        conventions.carto.run/framework: spring-boot
        kapp.k14s.io/app: "1683383963062903318"
        kapp.k14s.io/association: v1.6987a6df9b5bf1bba7fa894b5fcd95e6
        tanzu.app.live.view: "true"
        tanzu.app.live.view.application.actuator.path: actuator
        tanzu.app.live.view.application.actuator.port: "8080"
        tanzu.app.live.view.application.flavours: spring-boot
        tanzu.app.live.view.application.name: spring-sensors-unicredit-01-w01-s007
    spec:
      containers:
      - env:
        - name: JAVA_TOOL_OPTIONS
          value: -Dmanagement.endpoint.health.probes.add-additional-paths="true" -Dmanagement.health.probes.enabled="true" -Dserver.port="8080" -Dserver.shutdown.grace-period="24s"
        image: gcr.io/fe-cpage/tap/supply-chain/spring-sensors-unicredit-01-w01-s007-workloads@sha256:30fefd819d35d442f99b5e256992d7c303e71526d9d9e94276f7743044cb0399
        livenessProbe:
          httpGet:
            path: /livez
            port: 8080
            scheme: HTTP
        name: workload
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
        resources:
          limits:
            memory: 512Mi
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          runAsUser: 1000
      serviceAccountName: default

